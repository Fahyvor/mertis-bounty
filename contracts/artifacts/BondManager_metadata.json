{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_libAddressManager",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_who",
						"type": "address"
					}
				],
				"name": "isCollateralized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_chainId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_who",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_prop",
						"type": "address"
					}
				],
				"name": "isCollateralizedByChainId",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "libAddressManager",
				"outputs": [
					{
						"internalType": "contract Lib_AddressManager",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_chainId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_sequencer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_proposer",
						"type": "address"
					}
				],
				"name": "registerSequencerByChainId",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "resolve",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This contract allows the \"OVM_Proposer\" to submit state root batches and  includes functionality restricted to the contract owner. Runtime target: EVM",
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_libAddressManager": "Address of the Address Manager."
					}
				},
				"isCollateralized(address)": {
					"params": {
						"_who": "Address to check."
					},
					"returns": {
						"_0": "true if the address is properly collateralized, false otherwise."
					}
				},
				"isCollateralizedByChainId(uint256,address,address)": {
					"params": {
						"_chainId": "Chain ID to check.",
						"_prop": "Proposer's address.",
						"_who": "Address to check."
					},
					"returns": {
						"_0": "true if the address is collateralized."
					}
				},
				"registerSequencerByChainId(uint256,address,address)": {
					"params": {
						"_chainId": "Chain ID to register.",
						"_proposer": "Proposer's address.",
						"_sequencer": "Sequencer's address."
					}
				},
				"resolve(string)": {
					"params": {
						"_name": "Name to resolve an address for."
					},
					"returns": {
						"_0": "Address associated with the given name."
					}
				}
			},
			"title": "BondManager",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"isCollateralized(address)": {
					"notice": "Checks whether a given address is properly collateralized and can perform actions within the system."
				},
				"isCollateralizedByChainId(uint256,address,address)": {
					"notice": "Checks whether an address is collateralized by chain ID. Restricted to onlyOwner to prevent unauthorized access."
				},
				"registerSequencerByChainId(uint256,address,address)": {
					"notice": "Registers a sequencer by chain ID. Restricted to onlyOwner to prevent unauthorized access."
				},
				"resolve(string)": {
					"notice": "Resolves the address associated with a given name."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BondManager.sol": "BondManager"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/BondManager.sol": {
			"keccak256": "0xb171d0c553aaee489dc8c9a1332f466a4275095eaecfa96deb91068ea173c14a",
			"license": "MIT",
			"urls": [
				"bzz-raw://d890c0b258ae6775c54a5ed320d74c5a768e30e3cf4b687dd8c227330daedc45",
				"dweb:/ipfs/QmZcVwZXpHCRCXfdfJ9t2LArA8k1QTwqG9gNxKvAyCU215"
			]
		},
		"contracts/Context.sol": {
			"keccak256": "0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913",
			"license": "MIT",
			"urls": [
				"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf",
				"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy"
			]
		},
		"contracts/IBondManager.sol": {
			"keccak256": "0xad847fa1ec1c6ff608be98dd6c5b00175100edbd6d1dec54c07f902794e5704a",
			"license": "MIT",
			"urls": [
				"bzz-raw://c75e3d3816692dbf1b5936f2e279b72c9909c399b051a3a0309809fb7460a8ca",
				"dweb:/ipfs/QmbjBqkeWxbQFKsycitxaJzY76Yk2DxnpLs1X4kswRRXh1"
			]
		},
		"contracts/Lib_AddressManager.sol": {
			"keccak256": "0xd078d4aa1cb6e57d67f56a15af2d16e8897b9c1d6bd5b34b9c7e251473ed01fb",
			"license": "MIT",
			"urls": [
				"bzz-raw://3af94509e18a6153ce302b328a03e22bfdb8bd5faba4b41f598b6a838e80796d",
				"dweb:/ipfs/QmaBmdaQdDgFNn8uQAprCesgP66umBXCNss5GrLvzjVSfs"
			]
		},
		"contracts/Lib_AddressResolver.sol": {
			"keccak256": "0xe5736b44b0547df0b78f32843fe94e88f4bfbe6eda7e2a1e8833c1814abc6cc9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1d1a8f406202af23e2009da565848b136c138863d3a0118f8fa2eebe9868a7b",
				"dweb:/ipfs/QmNn76mnkF3z1sohVjTj9PAvrFbRiJZBB1bzJvcLppMqdg"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0x713777020f34226c5983abac126b4d8ade0fb693acc3ed2184d129aaf72f40f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://69f1d59b82845ab8d22bde941d9149aec4f937086437e403f4e622fad0e7e8ca",
				"dweb:/ipfs/QmXrJKZvvCrC8Ney47XKKcdB511DouNERWRx3tHdqaHksZ"
			]
		}
	},
	"version": 1
}